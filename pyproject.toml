[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "jexi"
version = "0.1.0"
description = "Email analysis and management system"
authors = []
readme = "README.md"
packages = [
    {include = "src", from = "."},
    {include = "models", from = "."},
    {include = "shared_lib", from = "."},
    {include = "config", from = "."},
    {include = "services", from = "."},
    {include = "utils", from = "."},
    {include = "tools", from = ".", format = "sdist"},  # Development tools only
    {include = "scripts", from = "."},
    {include = "alembic", from = "."},
    {include = "migrations", from = "."}
]

[tool.poetry.dependencies]
python = "3.12.8"
google-api-python-client = "2.120.0"
google-auth-oauthlib = "1.2.0"
boto3 = "1.33.6"
botocore = "1.33.13"
python-dateutil = "2.9.0"
pytz = "2024.1"
google-auth-httplib2 = "0.2.0"
keyring = "24.3.0"
pandas = "2.1.4"
plotly = "5.18.0"
jinja2 = "3.1.2"
markdown = "3.7"
numpy = "1.26.4"
tabulate = "0.9.0"
textblob = "0.17.1"
anthropic = "0.42.0"
python-dotenv = "1.0.1"
tqdm = "4.66.1"
sqlalchemy = "2.0.36"
alembic = "1.13.1"
networkx = "3.4.2"
structlog = "24.4.0"
pydantic = "2.6.1"
pydantic-settings = "2.2.1"
passlib = "1.7.4"
prompt-toolkit = "3.0.48"
cryptography = "42.0.0"
python-jose = "3.3.0"
tenacity = "8.2.3"
email-validator = "2.1.0.post1"
pytest-timeout = "^2.2.0"

[tool.poetry.group.dev.dependencies]
# Code Quality
black = ">=23.12.1"
pylint = ">=3.0.3"
mypy = ">=1.7.0"
bandit = ">=1.7.0"

# Testing
pytest = ">=7.0.0"
pytest-cov = ">=4.1.0"
pytest-mock = "3.14.0"
pytest-asyncio = "0.23.5"
pytest-faker = ">=2.0.0"
factory-boy = ">=3.3.0"
faker = ">=18.0.0"

# Development Workflow
pre-commit = ">=3.5.0"

[tool.poetry.scripts]
# Testing
test = "pytest:main"
coverage = "pytest:main ['--cov=src', '--cov=models', '--cov=shared_lib', '--cov-report=html', 'tests/']"

# Code Quality
format = "black:main ['.']"
lint = "pylint:run_pylint ['src', 'tests', 'models', 'shared_lib']"
typecheck = "mypy:main ['src', 'models', 'shared_lib']"
security = "bandit:main ['-r', 'src', 'models', 'shared_lib']"

[tool.pytest.ini_options]
pythonpath = [
    ".",
    "src",
    "tests",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "requires_external_tools: marks tests that need external tools",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/docs/
'''

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # wrong-hanging-indentation
    "C0326",  # bad-whitespace
]

[tool.pylint.format]
max-line-length = 88

[tool.coverage.run]
source = ["src", "models", "shared_lib"]
omit = [
    "tests/*",
    "setup.py",
    "tools/*",  # Exclude development tools from coverage
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
